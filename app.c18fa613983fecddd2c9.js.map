{"version":3,"file":"app.c18fa613983fecddd2c9.js","mappings":"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","sources":["webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://ajs-retro_game/./src/js/utils.js","webpack://ajs-retro_game/./src/js/GamePlay.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://ajs-retro_game/./src/js/themes.js","webpack://ajs-retro_game/./src/js/cursors.js","webpack://ajs-retro_game/./src/js/side.js","webpack://ajs-retro_game/./src/js/GameState.js","webpack://ajs-retro_game/./src/js/Character.js","webpack://ajs-retro_game/./src/js/PositionedCharacter.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/set.js","webpack://ajs-retro_game/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://ajs-retro_game/./src/js/heroesCharacteristic.js","webpack://ajs-retro_game/./src/js/Heroes/Bowman.js","webpack://ajs-retro_game/./src/js/Heroes/Daemon.js","webpack://ajs-retro_game/./src/js/Heroes/Magician.js","webpack://ajs-retro_game/./src/js/Heroes/Swordsman.js","webpack://ajs-retro_game/./src/js/Heroes/Undead.js","webpack://ajs-retro_game/./src/js/Heroes/Vampire.js","webpack://ajs-retro_game/./src/js/Team.js","webpack://ajs-retro_game/./src/js/generators.js","webpack://ajs-retro_game/./src/js/GameController.js","webpack://ajs-retro_game/./src/js/GameStateService.js","webpack://ajs-retro_game/./src/js/app.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export function calcTileType(index, boardSize) {\r\n  switch (true) {\r\n    case index === 0:\r\n      return 'top-left';\r\n    case (index < boardSize - 1):\r\n      return 'top';\r\n    case (index === boardSize - 1):\r\n      return 'top-right';\r\n    case (index === boardSize ** 2 - 1):\r\n      return 'bottom-right';\r\n    case ((index + 1) % boardSize === 0):\r\n      return 'right';\r\n    case (index > boardSize ** 2 - boardSize):\r\n      return 'bottom';\r\n    case (index === boardSize ** 2 - boardSize):\r\n      return 'bottom-left';\r\n    case (index % boardSize === 0):\r\n      return 'left';\r\n    default:\r\n      return 'center';\r\n  }\r\n}\r\n\r\nexport function calcHealthLevel(health) { \r\n  if (health < 15) {    //Проверяем сотояние здоровье у героя (  критическое  меньше 15, нормальное меньше 50, все выше высокое )\r\n    return 'critical';\r\n  }\r\n\r\n  if (health < 50) {\r\n    return 'normal';\r\n  }\r\n\r\n  return 'high';\r\n}\r\n","import { calcHealthLevel, calcTileType } from './utils';\r\n\r\nexport default class GamePlay {\r\n  constructor() {\r\n    this.boardSize = 8;\r\n    this.container = null;\r\n    this.popup = null;\r\n    this.boardEl = null; // Поле\r\n    this.cells = []; // Элементы поля\r\n    this.cellClickListeners = [];\r\n    this.cellEnterListeners = [];\r\n    this.cellLeaveListeners = [];\r\n    this.newGameListeners = [];\r\n    this.saveGameListeners = [];\r\n    this.loadGameListeners = [];\r\n  }\r\n\r\n  bindToDOM(container) {\r\n    if (!(container instanceof HTMLElement)) {\r\n      throw new Error('container is not HTMLElement');\r\n    }\r\n    this.container = container;\r\n  }\r\n\r\n  bindPopup(popup) {\r\n    if (!(popup instanceof HTMLElement)) {\r\n      throw new Error('container is not HTMLElement');\r\n    }\r\n    this.popup = popup;\r\n  }\r\n\r\n  /**\r\n   * Draws boardEl with specific theme\r\n   *\r\n   * @param theme\r\n   */\r\n  drawUi(theme) {\r\n    this.checkBinding();\r\n\r\n    this.container.innerHTML = `\r\n      <div class=\"controls\">\r\n        <button data-id=\"action-restart\" class=\"btn\">New Game</button>\r\n        <button data-id=\"action-save\" class=\"btn\">Save Game</button>\r\n        <button data-id=\"action-load\" class=\"btn\">Load Game</button>\r\n      </div>\r\n      <div class=\"board-container\">\r\n        <div data-id=\"board\" class=\"board\"></div>\r\n      </div>\r\n    `;\r\n\r\n    this.newGameEl = this.container.querySelector('[data-id=action-restart]');\r\n    this.saveGameEl = this.container.querySelector('[data-id=action-save]');\r\n    this.loadGameEl = this.container.querySelector('[data-id=action-load]');\r\n    this.popupCloseButton = this.popup.querySelector('.popup__button');\r\n\r\n    this.newGameEl.addEventListener('click', (event) => this.onNewGameClick(event));\r\n    this.saveGameEl.addEventListener('click', (event) => this.onSaveGameClick(event));\r\n    this.loadGameEl.addEventListener('click', (event) => this.onLoadGameClick(event));\r\n    this.popupCloseButton.addEventListener('click', () => this.closePopup());\r\n\r\n    this.boardEl = this.container.querySelector('[data-id=board]');\r\n\r\n    this.boardEl.classList.add(theme);\r\n    for (let i = 0; i < this.boardSize ** 2; i += 1) {\r\n      const cellEl = document.createElement('div');\r\n      cellEl.classList.add('cell', 'map-tile', `map-tile-${calcTileType(i, this.boardSize)}`);\r\n      cellEl.addEventListener('mouseenter', (event) => this.onCellEnter(event)); //Привязываем события mouseenter при наведении курсора на элемент для всех 63 клеток карты \r\n      cellEl.addEventListener('mouseleave', (event) => this.onCellLeave(event)); //Привязываем события mouseleave при покидания курсора с элемент для всех 63 клеток карты \r\n      cellEl.addEventListener('click', (event) => this.onCellClick(event));\r\n      this.boardEl.appendChild(cellEl);\r\n    }\r\n     \r\n    this.cells = Array.from(this.boardEl.children);\r\n  }\r\n\r\n  /**\r\n   * Draws positions (with chars) on boardEl\r\n   *\r\n   * @param positions array of PositionedCharacter objects\r\n   */\r\n  redrawPositions(positions) {\r\n    for (const cell of this.cells) { // Добавляем к каждому дом элементу пустую строку <div class=\"cell map-tile map-tile-top-left\">''</div>\r\n      cell.innerHTML = '';\r\n    }\r\n\r\n    for (const position of positions) {\r\n      const cellEl = this.boardEl.children[position.position]; //из обьета positions берем позицию игрока где он должен быть на карте и возрашаем элемент Dom \r\n      const charEl = document.createElement('div');\r\n      charEl.classList.add('character', position.character.type); //Добавляем классы к эементу cellEl 'character' и имя класса игры \r\n\r\n      const healthEl = document.createElement('div');\r\n      healthEl.classList.add('health-level');\r\n\r\n      const healthIndicatorEl = document.createElement('div');\r\n      healthIndicatorEl.classList.add('health-level-indicator', `health-level-indicator-${calcHealthLevel(position.character.health)}`); // передаем свойсво здоровье в функцию calcHealthLevel() и возрашам индикатор здоровье у героя\r\n      healthIndicatorEl.style.width = `${position.character.health}%`; //Добавляем в атрибут style свойсвто width в % отнош. состояние жизни героя \r\n      healthEl.appendChild(healthIndicatorEl); \r\n\r\n      charEl.appendChild(healthEl);\r\n      cellEl.appendChild(charEl);\r\n      //                                                       Создаем такую структуру \r\n      //<div class=\"cell map-tile map-tile-left\">\r\n      //   <div class=\"character bowman\">\r\n      //      <div class=\"health-level\">\r\n      //          <div class=\"health-level-indicator health-level-indicator-high\" style=\"width: 100%;\">\r\n      //      </div>\r\n      //   </div>\r\n      //</div>\r\n  \r\n    }\r\n  }\r\n\r\n  // Добавляет функцию обработки события в массив. Функция для События \"mouseenter\" применяется для каждой из 63 ячеек игрового поля. \r\n  addCellEnterListener(callback) {\r\n    this.cellEnterListeners.push(callback);\r\n  }\r\n\r\n // Добавляет функцию обработки события в массив. Функция для События \"mouseleave\" применяется для каждой из 63 ячеек  игрового поля. \r\n  addCellLeaveListener(callback) {\r\n    this.cellLeaveListeners.push(callback);\r\n  }\r\n\r\n // Добавляет функцию обработки события в массив. Функция для События \"сlick\" применяется для каждой из 63 ячеек игрового поля.\r\n  addCellClickListener(callback) {\r\n    this.cellClickListeners.push(callback);\r\n  }\r\n\r\n // Добавляет функцию обработки события в массив. Функция для События \"сlick\" по кнопки NewGame\r\n  addNewGameListener(callback) {\r\n    this.newGameListeners.push(callback);\r\n  }\r\n\r\n // Добавляет функцию обработки события в массив. Функция для События \"сlick\" по кнопки SaveGame\r\n  addSaveGameListener(callback) {\r\n    this.saveGameListeners.push(callback);\r\n  }\r\n\r\n // Добавляет функцию обработки события в массив. Функция для События \"сlick\" по кнопки LoadGame\r\n  addLoadGameListener(callback) {\r\n    this.loadGameListeners.push(callback);\r\n  }\r\n\r\n  //Вынесенная функция для снегерированного События \"mouseenter\" при наведении курсора на элемент\r\n  onCellEnter(event) {\r\n    event.preventDefault();\r\n    const index = this.cells.indexOf(event.currentTarget); // Определяем номер ячейки грового поля\r\n    this.cellEnterListeners.forEach((o) => o.call(null, index)); //Передаем номер ячейки грового поля в колбэк функцию\r\n  }\r\n\r\n //Вынесенная функция для снегерированного События \"mouseleave\" при покидания курсора с элемента\r\n  onCellLeave(event) {\r\n    event.preventDefault();\r\n    const index = this.cells.indexOf(event.currentTarget); // Определяем номер ячейки грового поля\r\n    this.cellLeaveListeners.forEach((o) => o.call(null, index)); // Передаем номер ячейки грового поля в колбэк функцию\r\n  }\r\n\r\n  //Вынесенная функция для снегерированного События \"Click\" на нажатия на элемент \r\n  onCellClick(event) {\r\n    const index = this.cells.indexOf(event.currentTarget); // Определяем номер ячейки грового поля\r\n    this.cellClickListeners.forEach((o) => o.call(null, index)); // Передаем номер ячейки грового поля в колбэк функцию\r\n  }\r\n\r\n  //Вынесенная функция для снегерированного События \"Click\" при нажатие кнопки NewGame(начать новую игру)\r\n  onNewGameClick(event) {\r\n    event.preventDefault();\r\n    this.newGameListeners.forEach((o) => o.call(null));\r\n  }\r\n\r\n  //Вынесенная функция для снегерированного События \"Click\" при нажатие кнопки SaveGame(сохранить игру)\r\n  onSaveGameClick(event) {\r\n    event.preventDefault();\r\n    this.saveGameListeners.forEach((o) => o.call(null));\r\n  }\r\n\r\n  //Вынесенная функция для снегерированного События \"Click\" при нажатие кнопки LoadGame(загрузить игру)\r\n  onLoadGameClick(event) {\r\n    event.preventDefault();\r\n    this.loadGameListeners.forEach((o) => o.call(null));\r\n  }\r\n\r\n  static showError(message) {\r\n    alert(message);\r\n  }\r\n\r\n  static showMessage(message) {\r\n    alert(message);\r\n  }\r\n\r\n  selectCell(index, color = 'yellow') { // Меняем подсветку на игр. поле\r\n    this.deselectCell(index);\r\n    this.cells[index].classList.add('selected', `selected-${color}`);\r\n  }\r\n\r\n  //Удаляем из выбранного элемента класс 'selected' котороый указывает подсвеченого игрока и поля для хода(желтого и зеленрого цвета) и проверяем есть ли в списке классов у каждого элемента в начале строки строка \"selected\" \r\n  deselectCell(index) {  \r\n    const cell = this.cells[index];\r\n    cell.classList.remove(...Array.from(cell.classList)\r\n      .filter((o) => o.startsWith('selected')));\r\n  }\r\n\r\n // Записываем в Атрибут title на message (message это сплывающее окно по наведению с информацией о персонаже \"пример(🎖 1 ⚔ 25 🛡 25 ❤ 100)\")\r\n  showCellTooltip(message, index) {\r\n    this.cells[index].title = message;\r\n  }\r\n\r\n  //Убираем сплывающие окно \"пример(🎖 1 ⚔ 25 🛡 25 ❤ 100)\". Атрибуте title задает всплывающую подсказку для элемента, которая будет появляться по наведению мышкой на элемент\r\n  hideCellTooltip(index) {\r\n    this.cells[index].title = '';\r\n  }\r\n\r\n  showDamage(index, damage) {\r\n    return new Promise((resolve) => {\r\n      const cell = this.cells[index];\r\n      const damageEl = document.createElement('span');\r\n      damageEl.textContent = damage;\r\n      damageEl.classList.add('damage');\r\n      cell.appendChild(damageEl);\r\n      damageEl.addEventListener('animationend', () => {\r\n        cell.removeChild(damageEl);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  //Меня вид курсора мыши \r\n  setCursor(cursor) {\r\n    this.boardEl.style.cursor = cursor;\r\n  }\r\n\r\n  checkBinding() {\r\n    if (this.container === null) {\r\n      throw new Error('GamePlay not bind to DOM'); // нет свойства this.container(Игровой процесс не привязан к DOM)\r\n    }\r\n  }\r\n\r\n  // Закрывает Popup\r\n  closePopup() {\r\n    this.popup.classList.add('popup_hidden');\r\n  }\r\n\r\n  // Показывает Popup\r\n  showPopup(message) {\r\n    const title = this.popup.querySelector('.popup__title');\r\n    title.textContent = message;\r\n    this.popup.classList.remove('popup_hidden');\r\n  }\r\n}\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const themes = {\r\n  prairie: 'prairie',\r\n  desert: 'desert',\r\n  arctic: 'arctic',\r\n  mountain: 'mountain',\r\n};\r\n\r\nexport default themes;\r\n","const cursors = {\r\n  auto: 'auto',\r\n  pointer: 'pointer',\r\n  crosshair: 'crosshair',\r\n  notallowed: 'not-allowed',\r\n};\r\n\r\nexport default cursors;\r\n","const side = {\r\n  COMP: 'computer',\r\n  USER: 'user',\r\n};\r\n\r\nexport default side;\r\n","export default class GameState {\r\n  static from(object) {\r\n    // TODO: create object\r\n    const {\r\n      stage,\r\n      teams,\r\n      motion,\r\n      scores,\r\n    } = object;\r\n    return new GameState(stage, teams, motion, scores);\r\n  }\r\n\r\n  constructor(stage, teams, motion, scores) {\r\n    this.stage = stage; // Уровень игры\r\n    this.teams = teams; // Команда\r\n    this.motion = motion; // Очередь хода\r\n    this.scores = scores || 0; // Количество очков\r\n    this.availableSteps = null; // Доступные после выбора варианты хода\r\n    this.availableAttack = null; // Доступные после выбора варианты атаки\r\n    this.selectedHero = null; // Выбранный персонаж\r\n  }\r\n\r\n  /**\r\n   * Очищает значение доступных шагов и атаки\r\n   */\r\n  clear() {\r\n    this.availableSteps = null;\r\n    this.availableAttack = null;\r\n    this.selectedHero = null;\r\n  }\r\n\r\n  /**\r\n   * Удаляет героя из команды по индексу\r\n   * @param {*} index - Индекс\r\n   */\r\n  removeHero(index) {\r\n    this.teams = this.teams.filter((member) => member.position !== index);\r\n  }\r\n\r\n  /**\r\n   * Считает и добавляет очки за раунд\r\n   */\r\n  addScores() {\r\n    const sum = this.teams.reduce((acc, member) => {\r\n      if (member.character.player === 'user') {\r\n        return acc + member.character.health;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n    this.scores += sum;\r\n  }\r\n}\r\n","export default class Character {\r\n  constructor(level, attack, defence, player, stepsRadius, attackRadius) {\r\n    this.level = level; // Уровень игрока\r\n    this.attack = attack; // Сила атаки\r\n    this.defence = defence; // Защита\r\n    this.health = 100; // Здоровье\r\n    this.player = player; // Тип игрока 'user' или 'computer'\r\n    this.stepsRadius = stepsRadius; // Доступный радиус хода в клетках\r\n    this.attackRadius = attackRadius; // Доступный радиус атаки в клетках\r\n    // TODO: throw error if user use \"new Character()\"\r\n    if (new.target.name === 'Character') {\r\n      throw new Error('Запрещено создавать объекты базового класса Character!');\r\n    }\r\n  }\r\n}\r\n","import Character from './Character';\r\n\r\nexport default class PositionedCharacter {\r\n  constructor(character, position) {\r\n    if (!(character instanceof Character)) {\r\n      throw new Error('character must be instance of Character or its children');\r\n    }\r\n\r\n    if (typeof position !== 'number') {\r\n      throw new Error('position must be a number');\r\n    }\r\n\r\n    this.character = character;\r\n    this.position = position;\r\n  }\r\n}\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nimport defineProperty from \"./defineProperty.js\";\n\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = superPropBase(target, property);\n      var desc;\n\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        defineProperty(receiver, property, value);\n      }\n\n      return true;\n    };\n  }\n\n  return set(target, property, value, receiver);\n}\n\nexport default function _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n\n  if (!s && isStrict) {\n    throw new Error('failed to set property');\n  }\n\n  return value;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import side from './side'\r\n\r\nconst characteristicsOfHeroes = {\r\n  [side.USER]: { \r\n    Bowman: {\r\n      attack: 25,\r\n      defence: 25,\r\n      stepsRadius: 2,\r\n      attackRadius: 2,\r\n    },\r\n    Magician: {\r\n      attack: 10,\r\n      defence: 40,\r\n      stepsRadius: 1,\r\n      attackRadius: 4,\r\n    },\r\n    Swordsman: {\r\n      attack: 40,\r\n     defence: 10,\r\n      stepsRadius: 4,\r\n      attackRadius: 1,\r\n    },\r\n  },  \r\n  [side.COMP]: { \r\n    Daemon: {\r\n      attack: 10,\r\n      defence: 40,\r\n      stepsRadius: 1,\r\n      attackRadius: 4,\r\n    },\r\n    Undead: {\r\n      attack: 40,\r\n      defence: 10,\r\n      stepsRadius: 4,\r\n      attackRadius: 1,\r\n    },\r\n    Vampire: {\r\n      attack: 25,\r\n      defence: 25,\r\n      stepsRadius: 2,\r\n      attackRadius: 2,\r\n    },\r\n  }  \r\n};\r\n\r\nexport default characteristicsOfHeroes;\r\n","import Character from '../Character';\r\nimport heroesConfig from '../heroesCharacteristic';\r\nimport side from '../side';\r\n\r\nexport default class Bowman extends Character {\r\n  constructor(level) {\r\n    // const targetClassName = new.target.name;\r\n    let {\r\n      attack,\r\n      defence,\r\n      stepsRadius,\r\n      attackRadius,\r\n    } = heroesConfig[side.USER][\"Bowman\"];\r\n    let player = side.USER;\r\n    super(level, attack, defence, player, stepsRadius, attackRadius);\r\n    // super.type = targetClassName.toLowerCase();\r\n    super.type = \"bowman\" \r\n  }\r\n}\r\n","import Character from '../Character';\r\nimport heroesConfig from '../heroesCharacteristic';\r\nimport side from '../side';\r\n\r\nexport default class Daemon extends Character {\r\n  constructor(level) {\r\n    // const targetClassName = new.target.name;\r\n    let {\r\n      attack,\r\n      defence,\r\n      stepsRadius,\r\n      attackRadius,\r\n    } = heroesConfig[side.COMP][\"Daemon\"];\r\n    let player = side.COMP;\r\n    super(level, attack, defence, player, stepsRadius, attackRadius);\r\n    // super.type = targetClassName.toLowerCase();\r\n    super.type = \"daemon\" \r\n  }\r\n}","import Character from '../Character';\r\nimport heroesConfig from '../heroesCharacteristic';\r\nimport side from '../side';\r\n\r\nexport default class Magician extends Character {\r\n  constructor(level) {\r\n    // const targetClassName = new.target.name;\r\n    let {\r\n      attack,\r\n      defence,\r\n      stepsRadius,\r\n      attackRadius,\r\n    } = heroesConfig[side.USER][\"Magician\"];\r\n    let player = side.USER;\r\n    super(level, attack, defence, player, stepsRadius, attackRadius);\r\n    // super.type = targetClassName.toLowerCase();\r\n    super.type = \"magician\"\r\n  }\r\n}\r\n","import Character from '../Character';\r\nimport heroesConfig from '../heroesCharacteristic';\r\nimport side from '../side';\r\n\r\nexport default class Swordsman extends Character {\r\n  constructor(level) {\r\n    // const targetClassName = new.target.name;\r\n    let {\r\n      attack,\r\n      defence,\r\n      stepsRadius,\r\n      attackRadius,\r\n    } = heroesConfig[side.USER][\"Swordsman\"];\r\n    let player = side.USER;\r\n    super(level, attack, defence, player, stepsRadius, attackRadius);\r\n    // super.type = targetClassName.toLowerCase();\r\n    super.type = \"swordsman\"\r\n  }\r\n}\r\n","import Character from '../Character';\r\nimport heroesConfig from '../heroesCharacteristic';\r\nimport side from '../side';\r\n\r\nexport default class Undead extends Character {\r\n  constructor(level) {\r\n    // const targetClassName = new.target.name;\r\n    let {\r\n      attack,\r\n      defence,\r\n      stepsRadius,\r\n      attackRadius,\r\n    } = heroesConfig[side.COMP][\"Undead\"];\r\n    let player = side.COMP;\r\n    super(level, attack, defence, player, stepsRadius, attackRadius);\r\n    // super.type = targetClassName.toLowerCase();\r\n    super.type = \"undead\"\r\n  }\r\n}\r\n","import Character from '../Character';\r\nimport heroesConfig from '../heroesCharacteristic';\r\nimport side from '../side';\r\n\r\nexport default class Vampire extends Character {\r\n  constructor(level) {\r\n    // const targetClassName = new.target.name;\r\n    let {\r\n      attack,\r\n      defence,\r\n      stepsRadius,\r\n      attackRadius,\r\n    } = heroesConfig[side.COMP][\"Vampire\"];\r\n    let player = side.COMP;\r\n    super(level, attack, defence, player, stepsRadius, attackRadius);\r\n    // super.type = targetClassName.toLowerCase();\r\n    super.type = \"vampire\"\r\n  }\r\n}\r\n","export default class Team {\r\n  constructor() {\r\n    this.members = new Set();\r\n  }\r\n\r\n  add(member) {\r\n    this.members.add(member);\r\n  }\r\n\r\n  get toArray() {\r\n    return [...this.members];\r\n  }\r\n}\r\n","import Team from './Team';\r\nimport side from './side';\r\n/**\r\n * Generates random characters\r\n *\r\n * @param allowedTypes iterable of classes\r\n * @param maxLevel max character level\r\n * @returns Character type children (ex. Magician, Bowman, etc)\r\n */\r\nexport function characterGenerator(allowedTypes, maxLevel) {\r\n  // TODO: write logic here\r\n  const randomType = Math.floor(Math.random() * allowedTypes.length);\r\n  const randomLevel = Math.floor(Math.random() * maxLevel) + 1;\r\n  return new allowedTypes[randomType](randomLevel);\r\n}\r\n\r\nexport function generateTeam(allowedTypes, maxLevel, characterCount) {\r\n  // TODO: write logic here\r\n  const team = new Team();\r\n  for (let i = 0; i < characterCount; i += 1) {\r\n    team.add(characterGenerator(allowedTypes, maxLevel));\r\n  }\r\n  return team;\r\n}\r\n\r\n/**\r\n * Генерирует случное поле для первого уровня\r\n * @param {*} player - Игрок 'user' или 'computer'\r\n * @returns номер поля :number\r\n */\r\n export function startFieldGenerator(player, arr) {\r\n  const boardSize = 8;\r\n  const cellsCount = boardSize ** 2 - 1;\r\n  const validateCells = [];\r\n  const startCell = player === side.USER ? 0 : boardSize - 2;\r\n  for (let i = startCell; i <= cellsCount; i += boardSize) {\r\n    validateCells.push(i, i + 1);\r\n  }\r\n  const randomIndex = Math.floor(Math.random() * validateCells.length);\r\n  if (arr.some((el) => el == validateCells[randomIndex])) {\r\n    return startFieldGenerator(player, arr);\r\n  } else {\r\n    arr.push(validateCells[randomIndex]);\r\n    return validateCells[randomIndex];\r\n  }\r\n}\r\n\r\n// Для случайного номера ячейки\r\n \r\n/**\r\n * Генерирует массив возможных вариантов хода\r\n * @param {number} index - Текущее положение\r\n * @param {number} radius - Радиус хода\r\n * @returns {Array} - Массив чисел\r\n */\r\nexport function getAvailableDistance(index, radius) {\r\n  const allowableSteps = new Set();\r\n  let topCell = index;\r\n  let bottomCell = index;\r\n  let leftCell = index;\r\n  let rightCell = index;\r\n\r\n  // Верхнее значение\r\n  while (topCell > (index - radius * 8) && (topCell - 8) >= 0) {\r\n    topCell -= 8;\r\n  }\r\n\r\n  // Нижнее значение\r\n  while (bottomCell < (index + radius * 8) && (bottomCell + 8) < 64) {\r\n    bottomCell += 8;\r\n  }\r\n\r\n  // Левое значение\r\n  while (leftCell > index - radius && leftCell % 8 !== 0) {\r\n    leftCell -= 1;\r\n  }\r\n\r\n  // Правое значение\r\n  while (rightCell < index + radius && (rightCell + 1) % 8 !== 0) {\r\n    rightCell += 1;\r\n  }\r\n\r\n  // Строка\r\n  for (let i = leftCell; i <= rightCell; i += 1) {\r\n    allowableSteps.add(i);\r\n  }\r\n\r\n  // Столбец\r\n  for (let i = topCell; i <= bottomCell; i += 8) {\r\n    allowableSteps.add(i);\r\n  }\r\n\r\n  // Верхняя левая диагональ\r\n  for (let i = index; i >= (index - radius * 9); i -= 9) {\r\n    allowableSteps.add(i);\r\n    if (i % 8 === 0 || (i - 8) < 0) break;\r\n  }\r\n\r\n  // Правая нижняя диагональ\r\n  for (let i = index; i <= (index + radius * 9); i += 9) {\r\n    allowableSteps.add(i);\r\n    if ((i + 1) % 8 === 0 || (i + 8) > 64) break;\r\n  }\r\n\r\n  // Правая верхняя диагональ\r\n  for (let i = index; i >= (index - 7 * radius); i -= 7) {\r\n    allowableSteps.add(i);\r\n    if ((i + 1) % 8 === 0 || (i - 7) < 0) break;\r\n  }\r\n\r\n  // Нижняя левая диагональ\r\n  for (let i = index; i <= (index + radius * 7); i += 7) {\r\n    allowableSteps.add(i);\r\n    if (i % 8 === 0 || (i + 7) >= 64) break;\r\n  }\r\n\r\n  return [...allowableSteps].filter((num) => num !== index); // Избавляемся от клетки игрового поля на которой стоит герой\r\n}\r\n\r\n/**\r\n * Считает радиус атаки\r\n * @param {*} index - Номер текущей ячейки\r\n * @param {*} radius - Радиус атаки\r\n * @returns\r\n */\r\nexport function getAvailableAttack(index, radius) {\r\n  const allowableAttack = new Set();\r\n  let leftCell = index;\r\n  let rightCell = index;\r\n  let startCell = null;\r\n\r\n  // Левое значение\r\n  while (leftCell > index - radius && leftCell % 8 !== 0) {\r\n    leftCell -= 1;\r\n  }\r\n  // Правое значение\r\n  while (rightCell < index + radius && (rightCell + 1) % 8 !== 0) {\r\n    rightCell += 1;\r\n  }\r\n  // Общее\r\n  startCell = leftCell;\r\n  while (startCell <= rightCell) {\r\n    let topValues = startCell;\r\n    let bottomValues = startCell;\r\n    allowableAttack.add(startCell);\r\n    // Верхнее значение\r\n    while (topValues > startCell - radius * 8 && topValues - 8 >= 0) {\r\n      topValues -= 8;\r\n      allowableAttack.add(topValues);\r\n    }\r\n\r\n    // Нижнее значение\r\n    while (bottomValues < startCell + radius * 8 && bottomValues + 8 < 64) {\r\n      bottomValues += 8;\r\n      allowableAttack.add(bottomValues);\r\n    }\r\n    startCell += 1;\r\n  }\r\n  return [...allowableAttack];\r\n}","/* eslint-disable max-len */\r\nimport themes from './themes';\r\nimport cursors from './cursors';\r\nimport side from './side';\r\nimport GameState from './GameState';\r\nimport PositionedCharacter from './PositionedCharacter';\r\nimport Bowman from './Heroes/Bowman';\r\nimport Daemon from './Heroes/Daemon';\r\nimport Magician from './Heroes/Magician';\r\nimport Swordsman from './Heroes/Swordsman';\r\nimport Undead from './Heroes/Undead';\r\nimport Vampire from './Heroes/Vampire';\r\nimport {\r\n  generateTeam,\r\n  startFieldGenerator,\r\n  getAvailableDistance,\r\n  getAvailableAttack,\r\n} from './generators';\r\n\r\n// Типы персонажей пользователей\r\nconst userTypes = [Swordsman, Bowman, Magician];\r\nconst computerTypes = [Daemon, Undead, Vampire];\r\n\r\nexport default class GameController {\r\n  constructor(gamePlay, stateService) {\r\n    this.gamePlay = gamePlay;\r\n    this.stateService = stateService;\r\n    this.gameState = null; // Актуальное состояние игры\r\n  }\r\n\r\n  /**\r\n   * Старт игры\r\n   */\r\n  init() {\r\n    this.loadGame();\r\n  }\r\n\r\n  checkCell() {\r\n    // События мыши на ячейке\r\n    this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this));\r\n    this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this));\r\n    this.gamePlay.addCellClickListener(this.onCellClick.bind(this));\r\n    // Сохранение игры\r\n    this.gamePlay.addSaveGameListener(this.saveGame.bind(this));\r\n    // Загрузка игры\r\n    this.gamePlay.addLoadGameListener(this.loadGame.bind(this));\r\n    // Новая игра\r\n    this.gamePlay.addNewGameListener(this.newGame.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Действие при клике\r\n   * @param {*} index * индекс ячейки по которой произошел клик\r\n   * @returns -\r\n   */\r\n  onCellClick(index) {\r\n   // Находим из всех созданных obj инф. о персонажей игры записаный в (this.gameState.teams) того которого мы выбрали.\r\n    const hero = this.gameState.teams.find((elem) => elem.position === index);\r\n    if (hero && hero.character.player === side.USER) { // Проверяем нажали на гереоя и ходит ли игрок или компьютер \r\n      //Для игрока \r\n      if (this.gameState.selectedHero) this.gamePlay.deselectCell(this.gameState.selectedHero.position); // Проверяем выбран ли персонаж (подсвеченый желтым цветом) по нажатию на его мыши \r\n      this.gamePlay.selectCell(index); // Метод подсвечивает игрока желтым цветом на игровом поле \r\n      this.gameState.availableSteps = getAvailableDistance(index, hero.character.stepsRadius); // Определяется зона по которому игрок может ходить по игровому полю, за 1 ход. Возрашает номера ячеек зоны.\r\n      this.gameState.availableAttack = getAvailableAttack(index, hero.character.attackRadius); // Определяется дистанция атаки игрока \r\n      this.gameState.selectedHero = hero; // Сохраняем или пересохраняем факт выбора героя (подсвеченый желтым цветом) при нажатии на него. \r\n      return;\r\n    }\r\n\r\n    // Ход. Клик в пустое поле\r\n    if (this.gameState.selectedHero) {\r\n      // Выбранная ячейка входит в допуск зоны перемешения героя и в нем нет героя\r\n      if (this.gameState.availableSteps.includes(index) && !hero) {\r\n        this.gamePlay.deselectCell(this.gameState.selectedHero.position); // Удаляем подсветку желтого цвета изображенную на игроке и подсветку зеленого цвета куда игрок будет ходить.\r\n        this.gameState.selectedHero.position = index; // Меняем позицию игрока на игровом поле. Куда переместится иконка игрока на поле. \r\n        this.gamePlay.deselectCell(index);// Удаляем подсветку зеленного цвета.\r\n        // Проверка окончания уровня и передача хода\r\n        this.checkLevel();\r\n      }\r\n      // Если в поле есть противник атакуем\r\n      if (hero && hero.character.player === side.COMP && this.gameState.availableAttack.includes(index)) {\r\n        this.attack(hero, this.gameState.selectedHero, index);\r\n      }\r\n      // Сообщение\r\n      if (hero && hero.character.player === side.COMP && !this.gameState.availableAttack.includes(index)) {\r\n        this.gamePlay.showPopup('Нужно подойти ближе');\r\n      }\r\n      return;\r\n    }\r\n    // Сообщения об ошибке\r\n    if (!this.gameState.selectedHero && hero && hero.character.player === side.COMP) {\r\n      let { type } = hero.character;\r\n      type = type[0].toUpperCase() + type.slice(1);\r\n      this.gamePlay.showPopup(`Это ${type}! Он явно не из наших!`);\r\n    }\r\n\r\n    // if (!this.gameState.selectedHero && !hero) {\r\n    //   // GamePlay.showError('Тут никого нет');\r\n    //   this.gamePlay.showPopup('Тут никого нет');\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * Действие при уходе с ячейки\r\n   * @param {*} index - индекс ячейки\r\n   */\r\n  onCellLeave(index) {\r\n    // Убираем сплывающие окно \"пример(🎖 1 ⚔ 25 🛡 25 ❤ 100)\r\n    this.gamePlay.hideCellTooltip(index);\r\n    // Условие проверяет если выбраный герой (герой подсвеченный желтым цветом) не сходил то подсветка остается на своем месте до тех пор пока герой не сходит.\r\n    if (this.gameState.selectedHero && (this.gameState.selectedHero.position !== index)) {\r\n      this.gamePlay.deselectCell(index);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Действие при наведении на ячейку\r\n   * @param {*} index - индекс ячейки\r\n   */\r\n  onCellEnter(index) {\r\n    // Сравнивает из списка obj инф о героях их позицию с реальной позицией на игр. поле. Если есть на этой ячеки игр. поля героя то возрашем obj инф о герое\r\n    const hero = this.gameState.teams.find((elem) => elem.position === index);\r\n    \r\n    if (hero) { //Если герой есть на ячейки то создаём всплывающее окно по наведению с информацией о персонаже \"пример(🎖 1 ⚔ 25 🛡 25 ❤ 100)\" и номер клетки игрового поля в showCellTooltip\r\n      const toolTip = this.constructor.createToolTipTemplate.call(this, hero);\r\n      this.gamePlay.showCellTooltip(toolTip, index);\r\n    }\r\n    // Меняем тип курсора,если нет выбранного персонажа\r\n    this.activeCursor(hero);\r\n\r\n    // Проверяем был ли выбран персонаж(выбранный персонаж обзн. желтым цветом) на игр. поле. Если да то возле героя по наведению на ячейку игр. поля посвечивается область дальнейшего его хода.  \r\n    if (this.gameState.selectedHero) {\r\n      this.activeCursorSelectedHero(index, hero);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Формирует шаблон всплывающей информации о персонаже\r\n   * @param {*} hero - объект с характеристиками персонажа\r\n   * @returns - шаблон (строка)\r\n   */\r\n  static createToolTipTemplate(hero) {\r\n    const {\r\n      level,\r\n      health,\r\n      attack,\r\n      defence,\r\n    } = hero.character;\r\n    return `\\u{1F396} ${level} \\u{2694} ${attack} \\u{1F6E1} ${defence} \\u{2764} ${health}`;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает курсор, если нет выбранного персонажа\r\n   * @param {*} hero - объект с характеристиками персонажа\r\n   */\r\n  activeCursor(hero) {\r\n    if (hero) {\r\n      const pointer = hero.character.player === side.USER ? cursors.pointer : cursors.notallowed; // Условие которое проверяет какой тип курсора нужно изменить, если навели на игрока то pointer, если на противника то notallowed\r\n      this.gamePlay.setCursor(pointer); //Активация одного из игровых курсоров.\r\n    } else {\r\n      this.gamePlay.setCursor(cursors.auto); // Курсор остается без изменений (стандартный курсор)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Изменяет типа курсора и подсветку ячейки хода/атаки при выбранном персонаже\r\n   * @param {*} index - индекс ячейки\r\n   * @param {*} hero - объект с характеристиками персонажа\r\n   */\r\n  activeCursorSelectedHero(index, hero) {\r\n    if (this.gameState.availableSteps.includes(index) && !hero) { //Проверяем если выбранная клетка игрового поля входит в область возможного хода игрока и на наличие сушности игрок или ИИ или пустое место в этой клетки. \r\n      this.gamePlay.setCursor(cursors.pointer); // меняем тип курсора на 'pointer'\r\n      this.gamePlay.selectCell(index, 'green'); // Подсвечивает выбранную клетку зеленный цветом на которую может пойти игрок. (курсор ввиде зеленого круга вписаного в клетку игр. поля)\r\n    } else if (hero && hero.character.player === side.COMP && this.gameState.availableAttack.includes(index)) {\r\n      this.gamePlay.setCursor(cursors.crosshair);\r\n      this.gamePlay.selectCell(index, 'red');\r\n    } else if (hero && hero.character.player === side.USER) {\r\n      this.gamePlay.setCursor(cursors.pointer);\r\n    } else {\r\n      this.gamePlay.setCursor(cursors.notallowed);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Сохранение игры\r\n   */\r\n  saveGame() {\r\n    this.stateService.save(this.gameState);\r\n    // GamePlay.showMessage('Игра сохранена');\r\n    this.gamePlay.showPopup('Игра сохранена');\r\n  }\r\n\r\n  /**\r\n   * Загрузка сохраненной игры, если такая есть\r\n   */\r\n  loadGame() {\r\n    // Чтобы не добавлялись лишние события при загрузке во время игры\r\n    if (this.gamePlay.cellClickListeners.length === 0) {\r\n      this.checkCell();\r\n    }\r\n    try {\r\n      const load = this.stateService.load(); //Возвращаем Obj извлеченного из локального хранилища сохраненой туда данных с игрой  \r\n      // const load = {\r\n      //   availableAttack: null,\r\n      //   availableSteps: null,\r\n      //   motion: \"user\",\r\n      //   scores: 0,\r\n      //   selectedHero: null,\r\n      //   stage: 1,\r\n      //   teams: [{\r\n      //     character: {\r\n      //       attack: 10,\r\n      //       attackRadius: 4,\r\n      //       defence: 40,\r\n      //       health: 100,\r\n      //       level: 1,\r\n      //       player: \"user\",\r\n      //       stepsRadius: 1,\r\n      //       type: \"magician\"\r\n      //     },\r\n      //     position: 49\r\n      //   }, {\r\n      //     character: {\r\n      //       attack: 25,\r\n      //       attackRadius: 2,\r\n      //       defence: 25,\r\n      //       health: 100,\r\n      //       level: 1,\r\n      //       player: \"user\",\r\n      //       stepsRadius: 2,\r\n      //       type: \"bowman\"\r\n      //     },\r\n      //     position: 0\r\n      //   }, {\r\n      //     character: {\r\n      //       attack: 25,\r\n      //       attackRadius: 2,\r\n      //       defence: 25,\r\n      //       health: 100,\r\n      //       level: 1,\r\n      //       player: \"computer\",\r\n      //       stepsRadius: 2,\r\n      //       type: \"vampire\"\r\n      //     },\r\n      //     position: 46\r\n      //   }, {\r\n      //     character: {\r\n      //       attack: 25,\r\n      //       attackRadius: 2,\r\n      //       defence: 25,\r\n      //       health: 100,\r\n      //       level: 1,\r\n      //       player: \"computer\",\r\n      //       stepsRadius: 2,\r\n      //       type: \"vampire\"\r\n      //     },\r\n      //     position: 7\r\n      //   }]\r\n      // }\r\n      if (load) {\r\n        this.gameState = GameState.from(load); //Перезаписываем load и возрашаем актуальное состояние игры и возрашаем this.gameState(Obj)\r\n        this.gamePlay.drawUi(Object.values(themes)[this.gameState.stage - 1]); //Получаем массив из 63 ячеек игрового поля записав их в GamePlay.this.cells и childNodes:(псевдо массив) GamePlay.this.boardEl\r\n        this.gamePlay.redrawPositions(this.gameState.teams); //После этого метода появляется на экр. карта с игроками \r\n      } else {\r\n        this.newGame();\r\n      }\r\n    } catch (error) {\r\n      // localStorage.removeItem('state');\r\n      this.constructor.clearLocalStorage('state');\r\n      this.gamePlay.showPopup(`Ошибка загрузки: \"${error.message}\"`);\r\n      this.newGame();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Новая игра сначала\r\n   */\r\n  newGame() {\r\n    if (this.gamePlay.cellClickListeners.length === 0) {\r\n      this.gamePlay.addCellClickListener(this.onCellClick.bind(this));\r\n    }\r\n    const totalScores = this.gameState ? this.gameState.scores : 0;\r\n    this.gameState = new GameState(1, [], side.USER, totalScores);\r\n    this.nextStage(this.gameState.stage);\r\n  }\r\n\r\n  /**\r\n   * Переход хода\r\n   */\r\n  nextPlayer() {\r\n    this.gameState.motion = (this.gameState.motion === side.USER) ? side.COMP : side.USER; // Определяет кто ходит человек или компьютер\r\n    // console.log('Ход переходит к:', this.gameState.motion);\r\n    if (this.gameState.motion === side.COMP) {\r\n      this.computerLogic(); // Логика хода и атаки компьютера\r\n    }\r\n    this.gameState.clear();\r\n  }\r\n\r\n  /**\r\n   * Проверка окончания уровня\r\n   */\r\n  checkLevel() {\r\n    const userValue = this.gameState.teams.some((member) => member.character.player === side.USER);// Проверяем если это герой в списки пользователя  возрашаем логич знач.\r\n    const computerValue = this.gameState.teams.some((member) => member.character.player === side.COMP);//  Проверяем если это герой в списки компьютера(ИИ) возрашаем логич знач.\r\n    if (userValue && computerValue) {\r\n      this.nextPlayer(); //  Передача хода. Если ходит компьютер(ИИ) то генерируем логику дейсвий компьютер(ИИ). После передачи хода игроку удаляем значения область атаки, область хода героя.  \r\n      return;\r\n    }\r\n    if (!computerValue) {\r\n      this.gameState.clear(); // Очищает значение доступных шагов и атаки\r\n      this.gameState.addScores(); // Считает и добавляет очки за раунд\r\n      this.nextStage(this.gameState.stage += 1); \r\n    }\r\n    if (!userValue) {\r\n      // GamePlay.showMessage('Враг оказался хитрее и сильнее(((');\r\n      this.gamePlay.showPopup('Вы проиграли! Попробуйте еще раз!');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Переход на следующий уровень\r\n   * @param {number} stage - Номер уровня\r\n   */\r\n  nextStage(stage) {\r\n    if (stage === 1) {\r\n      this.constructor.teamGeneration.call(this, userTypes, side.USER, 1, 2);\r\n      this.constructor.teamGeneration.call(this, computerTypes, side.COMP, 1, 2);\r\n    }\r\n\r\n    if (stage > 1 && stage < 5) {\r\n      // Повышаем уровень оставшихся\r\n      this.constructor.levelUp.call(this);\r\n      // + к команде user\r\n      const count = (stage === 2) ? 1 : 2;\r\n      this.constructor.teamGeneration.call(this, userTypes, side.USER, stage - 1, count);\r\n      // новая команда компа\r\n      const userCount = this.gameState.teams.filter((member) => member.character.player === side.USER).length;\r\n      this.constructor.teamGeneration.call(this, computerTypes, side.COMP, stage, userCount);\r\n      this.gamePlay.showPopup(`Уровень ${stage} Счет: ${this.gameState.scores}`);\r\n    }\r\n\r\n    if (stage >= 5) {\r\n      // Блокировка поля\r\n      this.gamePlay.cellClickListeners.length = 0;\r\n      // GamePlay.showMessage(`Победа! Игра окончена. Счет: ${this.gameState.scores}`);\r\n      this.gamePlay.showPopup(`Победа! Игра окончена. Счет: ${this.gameState.scores}`);\r\n    } else {\r\n      this.gamePlay.drawUi(Object.values(themes)[this.gameState.stage - 1]);\r\n      this.gamePlay.redrawPositions(this.gameState.teams);\r\n      // this.gamePlay.showPopup(`Уровень ${stage} Счет: ${this.gameState.scores}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Атака, расчет, выделение, удаление погибшего героя\r\n   */\r\n  async attack(attacked, attacker, indexAttacked) {\r\n    // Значение атаки атакующего персонажа\r\n    const { attack } = attacker.character;\r\n    // Значение защиты атакуемого\r\n    const { defense } = attacked.character;\r\n    // Атакуемый персонаж\r\n    const attackedUnit = attacked.character;\r\n    // Урон от атаки\r\n    const damage = 2 * Math.round(Math.max((attack - defense, attack * 0.1)));\r\n    attackedUnit.health -= damage;\r\n    // Проверка убит ли герой\r\n    if (attacked.character.health <= 0) {\r\n      this.gameState.removeHero(indexAttacked);\r\n    }\r\n    // Выделяем атакующего и атакуемого героя\r\n    this.gamePlay.selectCell(attacker.position);\r\n    this.gamePlay.selectCell(attacked.position, 'red');\r\n    // Обновляем поле\r\n    this.gamePlay.redrawPositions(this.gameState.teams);\r\n    // Чтобы не было выделения ячеек при анимации\r\n    this.gameState.selectedHero = null;\r\n    // Отображаем уровень урона анимацией\r\n    await this.gamePlay.showDamage(indexAttacked, damage);\r\n    // Снимаем выделение с атакующего и атакуемого героя\r\n    this.gamePlay.deselectCell(attacker.position);\r\n    this.gamePlay.deselectCell(attacked.position);\r\n    this.checkLevel();\r\n  }\r\n\r\n  /**\r\n   * Логика хода и атаки компьютера\r\n   */\r\n  computerLogic() {\r\n    const { teams } = this.gameState;\r\n    const computerTeams = teams.filter((member) => member.character.player === side.COMP); // отсоритруем героев компьютера(ИИ)\r\n    const userTeams = teams.filter((member) => member.character.player === side.USER);// отсоритруем героев игрока\r\n    const arr2 = teams.map((el) => el.position);\r\n    // Проверяем возможность атаки\r\n    const attack = computerTeams.some((compUnit) => {\r\n      this.gameState.availableAttack = getAvailableAttack(compUnit.position, compUnit.character.attackRadius); // Определяем зону атаки компьютеров(ИИ) \r\n      const attacked = userTeams.find((userUnit) => this.gameState.availableAttack.includes(userUnit.position)); // Определяем находится ли игрок в зоне поражения атаки компьютера(ИИ) \r\n      if (attacked) {\r\n        this.attack(attacked, compUnit, attacked.position); // \r\n        return true; // Если игрок находится в зоне поражения атаки компьютера(ИИ) возвращаем true\r\n      }\r\n      return false; // Если нет то возвращаем false\r\n    });\r\n    // Ход computer\r\n    if (!attack && computerTeams.length && userTeams.length) { // Условие если компьютер(ИИ) не может атаковать и если живые герои компьютер(ИИ) и живые герои Игрока\r\n      const unit = Math.floor(Math.random() * computerTeams.length); // Кто будет ходить из героев компьютера(ИИ) (Случайно генерируется номер героя компьютера(ИИ) который будет ходить)\r\n      const steps = getAvailableDistance(computerTeams[unit].position, computerTeams[unit].character.stepsRadius).filter((x) => teams.map((el) => el.position).indexOf(x) < 0); // Определим зону доступного для шага компьютера(ИИ) по игр. карте \r\n      const step = Math.floor(Math.random() * steps.length); // Рэндомного получаем индекс из массива для выбора его в качесве компьютера(ИИ)\r\n      computerTeams[unit].position = steps[step]; // Определяем на какую клетку будет ходить компьютер. Выбор осуществляется из массива доступных для компьютера(ИИ) ячеек перемещения. Возращаем индекс для массива steps\r\n      this.checkLevel(); // Проверка окончания уровня и стирает массив с зоной доступного для шага компьютера(ИИ) и зоной атаки компьютеров(ИИ)\r\n      this.gamePlay.redrawPositions(this.gameState.teams); // Отрисовка героев на игр. карте героев.\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Повышает уровень членов команды\r\n   */\r\n  static levelUp() {\r\n    let arr = [];\r\n    for (const member of this.gameState.teams) {\r\n      const parameter = member.character;\r\n      member.position = startFieldGenerator(side.USER, arr); // Раставляем случайно героев в ячеки игрового поля  \r\n      parameter.level += 1;\r\n      parameter.health = parameter.health + 80 >= 100 ? 100 : parameter.health + 80; // Прибавляем здоровь зависимости от того на сколько мы его потеряли в прошлой игре\r\n      parameter.attack = Math.floor(Math.max(parameter.attack, parameter.attack * (0.8 + parameter.health / 100)));\r\n    }\r\n    arr = [];\r\n  }\r\n\r\n  /**\r\n   *  Генератор стартовых команд (два не могут быть на одном поле)\r\n   * @param {*} teamType - Массив допустимых классов игрока\r\n   * @param {*} prayer - Тип игрока 'user' или 'computer'\r\n   * @returns - Массив объектов типа PositionedCharacter\r\n   */\r\n  static teamGeneration(teamType, prayer, maxLevel, count) {\r\n    // Генерируем новую команду\r\n    let newTeam = generateTeam(teamType, maxLevel, count);\r\n    // Список занятых на поле позиций\r\n    const positionList = [];\r\n    if (this.gameState.teams.length) {\r\n      this.gameState.teams.forEach((elem) => positionList.push(elem.position));\r\n    }\r\n    // Добавляем позиции новым персонажам\r\n    let arr = []\r\n    newTeam = newTeam.toArray.reduce((acc, member) => {\r\n      // Случайная позиция персонажа из списка доступных\r\n      let randomNumber = startFieldGenerator(prayer, arr);\r\n      positionList.push(randomNumber);\r\n      acc.push(new PositionedCharacter(member, randomNumber));\r\n      return acc;\r\n    }, []);\r\n    arr = []\r\n    this.gameState.teams.push(...newTeam);\r\n  }\r\n\r\n  /**\r\n * Очищает локальное хранилище\r\n * @param {string} key - значение по которому очистить localStorage;\r\n */\r\n  static clearLocalStorage(key) {\r\n    localStorage.removeItem(key);\r\n  }\r\n}\r\n","export default class GameStateService {\r\n  constructor(storage) {\r\n    this.storage = storage;\r\n  }\r\n\r\n  save(state) {\r\n    this.storage.setItem('state', JSON.stringify(state));\r\n  }\r\n\r\n  load() {\r\n    try {\r\n      return JSON.parse(this.storage.getItem('state')); //Извлекаем из локального хранилища данные с сохраненной игрой и преобразуем из строки в obj\r\n    } catch (e) {\r\n      throw new Error('Invalid state');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Entry point of app: don't change this\r\n */\r\nimport GamePlay from './GamePlay';\r\nimport GameController from './GameController';\r\nimport GameStateService from './GameStateService';\r\n\r\nconst gamePlay = new GamePlay();\r\ngamePlay.bindToDOM(document.querySelector('#game-container'));\r\ngamePlay.bindPopup(document.querySelector('#popup'));\r\n\r\nconst stateService = new GameStateService(localStorage);\r\n\r\nconst gameCtrl = new GameController(gamePlay, stateService); // В качесве аргумента два класса \r\ngameCtrl.init();\r\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","calcTileType","index","boardSize","GamePlay","this","container","popup","boardEl","cells","cellClickListeners","cellEnterListeners","cellLeaveListeners","newGameListeners","saveGameListeners","loadGameListeners","HTMLElement","Error","theme","checkBinding","innerHTML","newGameEl","querySelector","saveGameEl","loadGameEl","popupCloseButton","addEventListener","event","onNewGameClick","onSaveGameClick","onLoadGameClick","closePopup","classList","add","cellEl","document","createElement","onCellEnter","onCellLeave","onCellClick","appendChild","children","positions","health","position","charEl","character","type","healthEl","healthIndicatorEl","style","width","callback","push","preventDefault","indexOf","currentTarget","forEach","color","deselectCell","cell","remove","filter","startsWith","message","title","damage","Promise","resolve","damageEl","textContent","removeChild","cursor","alert","_typeof","obj","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","value","error","done","then","prairie","desert","arctic","mountain","GameState","stage","teams","motion","scores","availableSteps","availableAttack","selectedHero","member","sum","reduce","acc","player","object","Character","level","attack","defence","stepsRadius","attackRadius","PositionedCharacter","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_possibleConstructorReturn","_getPrototypeOf","getPrototypeOf","_defineProperty","set","property","receiver","Reflect","desc","base","hasOwnProperty","getOwnPropertyDescriptor","_set","isStrict","side","Bowman","Magician","Swordsman","Daemon","Undead","Vampire","heroesConfig","Team","members","Set","characterGenerator","allowedTypes","maxLevel","randomType","Math","floor","random","randomLevel","startFieldGenerator","cellsCount","validateCells","randomIndex","some","el","getAvailableDistance","radius","allowableSteps","topCell","bottomCell","leftCell","rightCell","num","getAvailableAttack","allowableAttack","startCell","topValues","bottomValues","userTypes","computerTypes","GameController","gamePlay","stateService","gameState","fn","loadGame","addCellEnterListener","addCellLeaveListener","addCellClickListener","addSaveGameListener","saveGame","addLoadGameListener","addNewGameListener","newGame","hero","find","elem","selectCell","includes","checkLevel","showPopup","toUpperCase","hideCellTooltip","toolTip","createToolTipTemplate","showCellTooltip","activeCursor","activeCursorSelectedHero","pointer","cursors","setCursor","save","checkCell","load","drawUi","values","themes","redrawPositions","clearLocalStorage","totalScores","nextStage","computerLogic","clear","userValue","computerValue","nextPlayer","addScores","teamGeneration","levelUp","count","userCount","attacked","attacker","indexAttacked","defense","attackedUnit","round","max","removeHero","showDamage","args","arguments","apply","err","undefined","computerTeams","userTeams","map","compUnit","userUnit","unit","steps","x","step","parameter","teamType","prayer","newTeam","characterCount","team","generateTeam","positionList","toArray","randomNumber","localStorage","removeItem","GameStateService","storage","state","setItem","JSON","stringify","parse","getItem","e","bindToDOM","bindPopup","init"],"sourceRoot":""}